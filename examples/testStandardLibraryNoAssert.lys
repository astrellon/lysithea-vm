(define testArray (function ()
    (define arr (0 1 2))

    (set arr (array.set arr 1 "b"))
    (set arr (array.insertFlatten arr -1 ("c" "d")))
    (set arr (array.insert arr 0 "a"))
    (set arr (array.removeAt arr 1))
    (set arr (array.remove arr 2))

    ; 4
    (define arrlen (array.length arr))

    ; "a" "b"
    (define sub (array.sublist arr 0 2))

    ; "a" "b" "c" "d"
    (set sub (array.sublist arr 0 -1))

    ; "d"
    (set sub (array.sublist arr -1 -1))

    ; "c" "d"
    (set sub (array.sublist arr -2 -1))

    ; "b" "c"
    (set sub (array.sublist arr -3 2))

    (define name "Foo")
    (define age 30)
    (define address ("location 1" "location 2"))

    (define arr2 (array.join name age address))
))

(define testString (function ()
    (define str "012 hello there")
    (set str (string.set str 1 "b"))
    (set str (string.insert str 1 "a"))
    (set str (string.removeAt str 0))
    (set str (string.removeAll str "2"))
    (set str (string.insert str -12 "c"))

    (define strLen (string.length str))

    ; "abc"
    (define sub (string.substring str 0 3))

    ; "e"
    (set sub (string.substring str -1 1))

    ; "hello"
    (set sub (string.substring str -11 5))

    ; "hello 123 there"
    (define join (+ "hello " 123 " there"))

    ; "hello,123,there"
    (set join (string.join "," "hello" 123 "there"))
))

(define testObject (function ()
    (define obj { name "Foo" age 30 })

    (set obj (object.set obj "name" "Bar"))

    (set obj (object.set obj "age" 31))

    (set obj (object.set obj "hasAddress" true))


    (define objKeys (object.keys obj))
    (define objLen (array.length objKeys))

    (define cont (array.contains objKeys "name"))
    (set cont (array.contains objKeys "name"))
    (set cont (array.contains objKeys "age"))
    (set cont (array.contains objKeys "hasAddress"))
    (set cont (array.contains objKeys "unknown"))

    (define objValues (object.values obj))
    (set objLen (array.length objValues))
    (set cont (array.contains objValues "Bar"))
    (set cont (array.contains objValues 31))
    (set cont (array.contains objValues true))
    (set cont (array.contains objValues false))

    (define objGet (object.get obj "name"))
    (set objGet (object.get obj "age"))
    (set objGet (object.get obj "hasAddress"))
    (set objGet (object.get obj "unknown"))

    (define removed (object.removeKey obj "name"))
    (set removed (object.removeKey obj "unknown"))
    (set removed (object.removeValues obj 31))
    (set removed (object.removeValues obj false))

    ; A simple example of a loop
    (define i 0)
    (define objLength (array.length objValues))
    (loop (< i objLength)
        (define temp (+ (toString i) " = " (array.get objValues i)))
        (++ i)
    )
))

(testArray)
;; (testString)
;; (testObject)