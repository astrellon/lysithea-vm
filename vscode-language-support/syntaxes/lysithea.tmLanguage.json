{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Lysithea",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#expression-operators"
		},
		{
			"include": "#function-call"
		},
		{
			"include": "#labels"
		},
		{
			"include": "#string"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.lysithea",
				"match": ";.*$"
			}]
		},
		"function-call": {
			"patterns": [{
				"match": "\\(\\s*([a-zA-Z][^\\s|\\)]+(\\.[^\\s|\\)]+)*)\\)?",
				"captures": {
					"1": {
						"name": "entity.name.function.lysithea"
					},
					"2": {
						"name": "entity.name.function.lysithea"
					}
				}
			}]
		},
		"labels": {
			"patterns": [{
				"match": "(:[^\\s|\\)]+)\\)?",
				"captures": {
					"1": {
						"name": "entity.name.selector.lysithea"
					}
				}
			}]
		},
		"keywords": {
			"patterns": [{
				"match": "\\(\\s*(function|if|unless|define|const|loop|continue|break|set|inc|dec|jump|return)\\b|\\b(true|false)\\b",
				"captures": {
						"1": {
							"name": "keyword.lysithea"
						},
						"2": {
							"name": "keyword.lysithea"
						}
					}
				}]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.lysithea",
					"match": "\\b-?[0-9][0-9\\.]+\\b"
				}
			]
		},
		"string": {
			"patterns": [
				{
					"include": "#qstring-single"
				},
				{
					"include": "#qstring-double"
				}
			]
		},
		"qstring-double": {
			"name": "string.quoted.double.lysithea",
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lysithea"
				}
			},
			"end": "\"(?=[^\"])",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.string.end.lysithea"
				},
				"2": {
					"name": "invalid.illegal.newline.lysithea"
				}
			},
			"patterns": [
				{
					"include": "#string-character-escape"
				}
			]
		},
		"qstring-single": {
			"name": "string.quoted.single.lysithea",
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lysithea"
				}
			},
			"end": "'(?=[^'])",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.string.end.lysithea"
				},
				"2": {
					"name": "invalid.illegal.newline.lysithea"
				}
			},
			"patterns": [
				{
					"include": "#string-character-escape"
				}
			]
		},
		"string-character-escape": {
			"name": "constant.character.escape.lysithea",
			"match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
		},
		"expression-operators": {
			"name": "keyword.operator",
			"patterns": [
				{
					"name": "keyword.operator.assignment.compound.lysithea",
					"match": "\\*=|/=|\\+=|-=|\\&\\&=|\\|\\|=|\\$="
				},
				{
					"name": "keyword.operator.comparison.lysithea",
					"match": "==|!="
				},
				{
					"name": "keyword.operator.relational.lysithea",
					"match": "<=|>=|<|>"
				},
				{
					"name": "keyword.operator.logical.lysithea",
					"match": "\\!|&&|\\|\\|"
				},
				{
					"name": "keyword.operator.assignment.lysithea",
					"match": "\\="
				},
				{
					"name": "keyword.operator.decrement.lysithea",
					"match": "--"
				},
				{
					"name": "keyword.operator.increment.lysithea",
					"match": "\\+\\+"
				},
				{
					"name": "keyword.operator.arithmetic.lysithea",
					"match": "\\*|/|-|\\+"
				},
				{
					"name": "keyword.other.lysithea",
					"match": "\\$"
				}
			]
		}
	},
	"scopeName": "source.lysithea"
}